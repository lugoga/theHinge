select(-site) %$%
stats::ts(data = chl, start = c(1997,9), frequency = 12)
chl.ts.modis = chl.series %>%
filter(site == "eez") %>%
select(-site) %$%
stats::ts(data = chl, start = c(2003,1), frequency = 12)
chl.ts %>%
plot.ts(las = 1, ylab = expression(Chl-a~(mgm^{-3})))
sst.ts %>%
plot(las = 1, ylab = expression(SST~(degree*C)))
sst.ts %>%
ts.intersect(chl.ts) %>%
plot.ts()
sst.ts %>%
ts.union(chl.ts) %>%
plot()
sst.ts %>% ts.intersect(chl.ts.modis) %>% plot(las = 1, yax.flip = TRUE)
sst.trend = sst.ts %>%
TTR::SMA(n = 12)
sst.trend %>%
plot()
sst.ts %>%
ts.intersect(sst.trend) %>%
plot(las = 1, yax.flip = TRUE)
sst.ts.decomposed = sst.ts %>%
decompose()
sst.ts.decomposed %>%
plot(yax.flip = TRUE)
sst.ts.decomposed = sst.ts %>%
decompose()
sst.ts.season.adjusted = sst.ts - sst.ts.decomposed$seasonal
sst.ts.season.adjusted %>%
plot(las = 1, ylab = expression(SST~(degree*C)))
sst.ts %>%  tsibble::as_tsibble() %>%  rename(sst = value, Month = index) %>%
model(
ets = ETS(box_cox(sst, 0.3)),
arima = ARIMA(log(sst)),
snaive = SNAIVE(sst)
) %>%
forecast(h = "4 years") %>%
autoplot()
sst.ts %>%  tsibble::as_tsibble() %>%  rename(sst = value, Month = index) %>%
model(
ets = ETS(box_cox(sst, 0.3)),
arima = ARIMA(log(sst)),
snaive = SNAIVE(sst)
) %>%
forecast::forecast(h = "4 years") %>%
autoplot()
require(forecast)
sst.ts %>%  tsibble::as_tsibble() %>%
rename(sst = value, Month = index) %>%
model(
ets = ETS(box_cox(sst, 0.3)),
arima = ARIMA(log(sst)),
snaive = SNAIVE(sst)
) %>%
forecast::forecast(h = "4 years") %>%
autoplot()
library(fable)
library(tsibble)
library(tsibbledata)
library(lubridate)
library(dplyr)
aus_retail %>%
filter(
State %in% c("New South Wales", "Victoria"),
Industry == "Department stores"
) %>%
model(
ets = ETS(box_cox(Turnover, 0.3)),
arima = ARIMA(log(Turnover)),
snaive = SNAIVE(Turnover)
) %>%
forecast(h = "2 years") %>%
autoplot(filter(aus_retail, year(Month) > 2010), level = NULL)
pemba.daily.sst = wior::get_sstMUR(
lon.min = 39.3,
lon.max = 39.5,
lat.min = -5.0,
lat.max = -5.2,
t1 = "2015-08-01",
t2 = "2019-12-31")
pemba.daily.sst = read_csv("data/pemba_daily_sst.csv")
pemba.sst = pemba.daily.sst %>%
group_by(time) %>%
summarise(sst = median(analysed_sst, na.rm = TRUE))
pemba.sst %>% FSA::headtail()
require(heatwaveR)
ts.clim = pemba.sst %>%
rename(t = time, temp = sst) %>%
heatwaveR::ts2clm(climatologyPeriod = c("2015-08-01", "2019-12-31"))
pemba.mhw = ts.clim %>%
heatwaveR::detect_event()
pemba.mhw %>%
event_line(metric = "intensity_mean",
spread = 60,
start_date = "2019-01-01",
end_date = "2019-03-31")+
scale_y_continuous(breaks = seq(27,31,.5)) +
theme(legend.position = c(.025,.85))
pemba.sst.ts =  pemba.sst %$%
ts(data = sst, start = c(2015,8), frequency = 365.25)
pemba.sst.decompose = pemba.sst.ts %>%
decompose()
pemba.sst.decompose %>%
plot(yax.flip = TRUE, las = 1)
seasonal.adjusted = pemba.sst.ts -pemba.sst.decompose$seasonal
seasonal.adjusted %>%
plot()
pemba.splits = pemba.daily.sst %>%
filter(time > "2016-08-01") %>%
mutate(miezi = lubridate::month(time), mwaka = lubridate::year(time)) %>%
group_by(miezi, mwaka) %>%
summarise(sst = median(analysed_sst, na.rm = TRUE)) %>%
ungroup
pemba.splits %$%
EnvStats::kendallTrendTest(sst ~ mwaka) %>%
broom::tidy()%>%
slice(1)
pemba.splits %>%
mutate(season = if_else(miezi %in% c(10:12,1:4), "NE", "SE")) %>%
filter(season == "SE")%$%
EnvStats::kendallTrendTest(sst ~ mwaka)
pemba.splits %>%
mutate(season = if_else(miezi %in% c(10:12,1:4), "NE", "SE")) %>%
filter(season == "NE")%$%
EnvStats::kendallTrendTest(sst ~ mwaka)
meteo =wior::get_meteo(coastal_codes = 2,begin_year = 2016, end_year = 2020)
chl.ts.modis %>%
tseries::adf.test() %>%
broom::tidy()
pemba.splits %>%
mutate(season = if_else(miezi %in% c(10:12,1:4), "NE", "SE")) %>%
filter(season == "NE")%$%
EnvStats::kendallTrendTest(sst ~ mwaka)
chl.series %>% FSA::headtail()
sst.series
sst.series
sst.df.wide = sst.series %>%
ungroup() %>%
# rowid_to_column()
pivot_wider(names_from = site, values_from = sst)
chl.df.wide = chl.series %>%
ungroup() %>%
# rowid_to_column()
pivot_wider(names_from = site, values_from = chl)
sst.wide.ts = sst.df.wide %>%
select(2:6) %>%
as.matrix() %>%
ts(start = c(2003,1), frequency = 12)
sst.wide.ts %>%
plot()
sst.ts %>%  tsibble::as_tsibble() %>%
rename(sst = value, Month = index) %>%
model(
ets = ETS(box_cox(sst, 0.3)),
arima = ARIMA(log(sst)),
snaive = SNAIVE(sst)
) %>%
forecast::forecast(h = "4 years") %>%
autoplot()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
insitu = readxl::read_excel("d:/semba/sapphire/data/DeepSea insitu sample.xlsx", sheet = 1) %>% select(station1 =station, lon, lat)
insitu = readxl::read_excel("d:/semba/sapphire/data/DeepSea insitu sample.xlsx", sheet = 1) %>% select(station1 =station, lon, lat)
chl = readxl::read_excel("d:/semba/sapphire/data/water_samples.xlsx", sheet = 1)%>%
separate(col =  station, into = c("station", "strata"), sep = 4) %>%
bind_cols(insitu)
nitrate = readxl::read_excel("d:/semba/sapphire/data/water_samples.xlsx", sheet = 2)%>%
separate(col =  station, into = c("station", "strata"), sep = 4) %>%
bind_cols(insitu)
phosphate = readxl::read_excel("d:/semba/sapphire/data/water_samples.xlsx", sheet = 3)%>%
separate(col =  station, into = c("station", "strata"), sep = 4) %>%
bind_cols(insitu)
insitu.data = chl %>%
bind_rows(phosphate, nitrate) %>%
relocate(lon, lat, station, .before = variable) %>%
select(-station1) %>%
pivot_longer(cols = NE:SE, values_to = "data", names_to = "season")
nitrate.se = insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "nitrate" & season == "SE")  %$%
akima::interp(x = lon,y = lat,z = data,
linear = FALSE,
jitter = 200,
jitter.random = TRUE,
extrap = FALSE,
duplicate = "strip") %>%
akima::interp2xyz() %>%
as_tibble() %>%
ggplot(aes(x = x, y = y , z = z))+
metR::geom_contour_fill(bins = 12)+
# metR::geom_contour2(breaks = 1.17) +
scale_fill_gradientn(colours = mycolor3,
guide = guide_colorbar(title = expression(paste(NO[3]," ", "(\u00B5g/L)",sep="")), direction = "horizontal", title.position = "top",
reverse = FALSE,
title.hjust = .5,
barwidth = unit(4, "cm"),
barheight = unit(.2,"cm")),
trans = scales::modulus_trans(p = .1))+
ggspatial::layer_spatial(data = pemba.sf, fill = "#bea896", col = 1)+
coord_sf(xlim = c(39.0, 39.4), ylim = c(-5.45,-5.14))+
scale_y_continuous(breaks = c(-5.4, -5.2),
labels = metR::LatLabel(c(-5.4,-5.2)))+
scale_x_continuous(breaks = c(39.05, 39.35),
labels = metR::LonLabel(c(39.1,39.4)))+
theme_bw()+
theme(axis.title = element_blank(),
axis.text = element_text(size = 10, color = 1),
# axis.text.y = element_blank(),
legend.background = element_blank(),
legend.position = c(.5,.15))+
annotate(geom = "text", x = 39.01, y = -5.15, label = "a)")
require(tidyverse)
require(sf)
require(magrittr)
require(patchwork)
mycolor2 = c("#040ED8", "#2050FF", "#4196FF", "#6DC1FF", "#86D9FF", "#9CEEFF", "#AFF5FF", "#CEFFFF", "#FFFE47", "#FFEB00", "#FFC400", "#FF9000", "#FF4800", "#FF0000", "#D50000", "#9E0000")
mycolor = c("#7f007f", "#0000ff",  "#007fff", "#00ffff", "#00bf00", "#7fdf00",
"#ffff00", "#ff7f00", "#ff3f00", "#ff0000", "#bf0000")
odv_color = c("#feb483", "#d31f2a", "#ffc000", "#27ab19", "#0db5e6", "#7139fe", "#d16cfa") %>% rev()
pal = wesanderson::wes_palette("Zissou1", 21, type = "continuous")
mycolor3 = c("#9000B0", "#C900B0", "#C760AF",                    "#1190F9", "#60C8F8", "#90C9F8", "#F8F8F8", "#F8F800",  "#F8D730", "#f8b030", "#f8602f", "#f80000")
africa = st_read("d:/semba/shapefile/africa.shp", quiet = TRUE)
pemba.sf = africa %>%
st_crop(xmin = 38, xmax = 41, ymin = -8, ymax = -2)
nitrate.se = insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "nitrate" & season == "SE")  %$%
akima::interp(x = lon,y = lat,z = data,
linear = FALSE,
jitter = 200,
jitter.random = TRUE,
extrap = FALSE,
duplicate = "strip") %>%
akima::interp2xyz() %>%
as_tibble() %>%
ggplot(aes(x = x, y = y , z = z))+
metR::geom_contour_fill(bins = 12)+
# metR::geom_contour2(breaks = 1.17) +
scale_fill_gradientn(colours = mycolor3,
guide = guide_colorbar(title = expression(paste(NO[3]," ", "(\u00B5g/L)",sep="")), direction = "horizontal", title.position = "top",
reverse = FALSE,
title.hjust = .5,
barwidth = unit(4, "cm"),
barheight = unit(.2,"cm")),
trans = scales::modulus_trans(p = .1))+
ggspatial::layer_spatial(data = pemba.sf, fill = "#bea896", col = 1)+
coord_sf(xlim = c(39.0, 39.4), ylim = c(-5.45,-5.14))+
scale_y_continuous(breaks = c(-5.4, -5.2),
labels = metR::LatLabel(c(-5.4,-5.2)))+
scale_x_continuous(breaks = c(39.05, 39.35),
labels = metR::LonLabel(c(39.1,39.4)))+
theme_bw()+
theme(axis.title = element_blank(),
axis.text = element_text(size = 10, color = 1),
# axis.text.y = element_blank(),
legend.background = element_blank(),
legend.position = c(.5,.15))+
annotate(geom = "text", x = 39.01, y = -5.15, label = "a)")
nitrate.ne = insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "nitrate" & season == "NE")  %$%
akima::interp(x = lon,y = lat,z = data,
linear = FALSE,
jitter = 200,
jitter.random = TRUE,
extrap = FALSE,
duplicate = "strip") %>%
akima::interp2xyz() %>%
as_tibble() %>%
ggplot(aes(x = x, y = y , z = z))+
metR::geom_contour_fill(bins = 12)+
# metR::geom_contour2(breaks = 1.17) +
scale_fill_gradientn(colours = mycolor3,
guide = guide_colorbar(title = expression(paste(NO[3]," ", "(\u00B5g/L)",sep="")), direction = "horizontal", title.position = "top",
reverse = FALSE,
title.hjust = .5,
barwidth = unit(4, "cm"),
barheight = unit(.2,"cm")),
trans = scales::modulus_trans(p = .1))+
ggspatial::layer_spatial(data = pemba.sf, fill = "#bea896", col = 1)+
coord_sf(xlim = c(39.0, 39.4), ylim = c(-5.45,-5.14))+
scale_y_continuous(breaks = c(-5.4, -5.2),
labels = metR::LatLabel(c(-5.4,-5.2)))+
scale_x_continuous(breaks = c(39.05, 39.35),
labels = metR::LonLabel(c(39.1,39.4)))+
theme_bw()+
theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text = element_text(size = 10, color = 1),
legend.background = element_blank(),
legend.position = c(.5,.15))+
annotate(geom = "text", x = 39.01, y = -5.15, label = "b)")
nitrate.se + nitrate.ne
# ggsave("graphics/nitrate_season.pdf", width = 6, height = 2.5)
po.se = insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE")  %$%
akima::interp(x = lon,y = lat,z = data,
linear = FALSE,
jitter = 200,
jitter.random = TRUE,
extrap = FALSE,
duplicate = "strip") %>%
akima::interp2xyz() %>%
as_tibble() %>%
ggplot(aes(x = x, y = y , z = z))+
metR::geom_contour_fill(bins = 12)+
# metR::geom_contour2(breaks = 1.17) +
scale_fill_gradientn(colours = mycolor3,
guide = guide_colorbar(title = expression(paste(PO[4]," ", "(\u00B5g/L)",sep="")), direction = "horizontal", title.position = "top",
reverse = FALSE,
title.hjust = .5,
barwidth = unit(4, "cm"),
barheight = unit(.2,"cm")),
trans = scales::modulus_trans(p = .1))+
ggspatial::layer_spatial(data = pemba.sf, fill = "#bea896", col = 1)+
coord_sf(xlim = c(39.0, 39.4), ylim = c(-5.45,-5.14))+
scale_y_continuous(breaks = c(-5.4, -5.2),
labels = metR::LatLabel(c(-5.4,-5.2)))+
scale_x_continuous(breaks = c(39.05, 39.35),
labels = metR::LonLabel(c(39.1,39.4)))+
theme_bw()+
theme(axis.title = element_blank(),
axis.text = element_text(size = 10, color = 1),
# axis.text.y = element_blank(),
legend.background = element_blank(),
legend.position = c(.5,.15))+
annotate(geom = "text", x = 39.01, y = -5.15, label = "a)")
po.ne = insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "NE")  %$%
akima::interp(x = lon,y = lat,z = data,
linear = FALSE,
jitter = 200,
jitter.random = TRUE,
extrap = FALSE,
duplicate = "strip") %>%
akima::interp2xyz() %>%
as_tibble() %>%
ggplot(aes(x = x, y = y , z = z))+
metR::geom_contour_fill(bins = 12)+
# metR::geom_contour2(breaks = 1.17) +
scale_fill_gradientn(colours = mycolor3,
guide = guide_colorbar(title = expression(paste(PO[4]," ", "(\u00B5g/L)",sep="")), direction = "horizontal", title.position = "top",
reverse = FALSE,
title.hjust = .5,
barwidth = unit(4, "cm"),
barheight = unit(.2,"cm")),
trans = scales::modulus_trans(p = .1))+
ggspatial::layer_spatial(data = pemba.sf, fill = "#bea896", col = 1)+
coord_sf(xlim = c(39.0, 39.4), ylim = c(-5.45,-5.14))+
scale_y_continuous(breaks = c(-5.4, -5.2),
labels = metR::LatLabel(c(-5.4,-5.2)))+
scale_x_continuous(breaks = c(39.05, 39.35),
labels = metR::LonLabel(c(39.1,39.4)))+
theme_bw()+
theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text = element_text(size = 10, color = 1),
legend.background = element_blank(),
legend.position = c(.5,.15))+
annotate(geom = "text", x = 39.01, y = -5.15, label = "b)")
po.se + po.ne
# ggsave("graphics/phosphate_season.pdf", width = 6, height = 2.5)
knitr::include_graphics("plots/phosphate_season-01.png")
knitr::include_graphics("plots/nitrate_season-01.png")
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE")
require(mgcViz)
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %>%
gam(data ~ s(lon, lat, k = 3) )
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 3) )
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 3)) %>%
tidymv::predict_gam()
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 3)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 3)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat))
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 2)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 12)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 120)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 36)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 5)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 20)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "SE") %$%
gam(data ~ s(lon, lat, k = 10)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "NE") %$%
gam(data ~ s(lon, lat, k = 10)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
knitr::include_graphics("plots/phosphate_season-01.png")
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "NE") %$%
gam(data ~ s(lon, lat, k = 10)) %>%
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "NE") %$%
gam(data ~ s(lon, lat, k = 10)) %>%
getViz() %>%
plot(select = 1)
insitu.data %>%
mutate(strata = str_remove(string = strata,pattern = " ")) %>%
filter(variable == "phosphate" & season == "NE") %$%
gam(data ~ s(lon, lat, k = 10)) %>%
# getViz() %>%
# plot(select = 1)
tidymv::predict_gam() %>%
ggplot(aes(x = lon, y = lat , z = fit))+
metR::geom_contour_fill(bins = 12)#
blogdown:::new_post_addin()
knitr::include_graphics("phosphate_season-01.png")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, comment = "")
knitr::include_graphics("nitrate_season-01.png")
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
