blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::new_post_addin()
knitr::include_graphics("d:/semba/tafiri_abstract/graphics/data_driven_workflow-01.png")
knitr::include_graphics("d:/semba/tafiri_abstract/graphics/data_driven_workflow-01.png")
getwd()
knitr::include_graphics("data_driven_workflow-01.png")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(magrittr)
zones = tibble(
zone = c("eez", "pemba", "zanzibar", "mafia", "mtwara"),
lon.min = c(42, 38.98,38.67,39.06,39.64),
lon.max = c(42.8,39.5,39.4,39.84,40.6),
lat.min = c(-6.2, -5.35,-6.7,-7.98,-10.5),
lat.max = c(-4.7,-44.8,-5.8,-7.2,-9.7),
t1 = c("2003-01-01", "2003-01-01","2003-01-01","2003-01-01","2003-01-01"),
t2 = c("2019-12-31", "2019-12-31", "2019-12-31", "2019-12-31", "2019-12-31"))
chl.modis = vroom::vroom("data/chl_modis.csv")
chl.seawif = vroom::vroom("data/chl_seawifs.csv")
sst.modis = vroom::vroom("data/sst_modis.csv")
sst.series = sst.modis %>%
group_by(time, site) %>%
summarise(sst = median(sst, na.rm = TRUE))
chl.series = chl.modis %>%
group_by(time, site) %>%
summarise(chl = median(chlorophyll, na.rm = TRUE))
chl.series.seawif = chl.seawif %>%
group_by(time, site) %>%
summarise(chl = median(chlorophyll, na.rm = TRUE))
sst.ts = sst.series %>%
filter(site == "eez") %>%
select(-site) %$%
stats::ts(data = sst, start = 2003, frequency = 12)
chl.ts = chl.series.seawif %>%
filter(site == "eez") %>%
select(-site) %$%
stats::ts(data = chl, start = c(1997,9), frequency = 12)
chl.ts.modis = chl.series %>%
filter(site == "eez") %>%
select(-site) %$%
stats::ts(data = chl, start = c(2003,1), frequency = 12)
chl.ts %>%
plot.ts(las = 1, ylab = expression(Chl-a~(mgm^{-3})))
sst.ts %>%
plot(las = 1, ylab = expression(SST~(degree*C)))
sst.ts %>%
ts.intersect(chl.ts) %>%
plot.ts()
sst.ts %>%
ts.union(chl.ts) %>%
plot()
sst.ts %>% ts.intersect(chl.ts.modis) %>% plot(las = 1, yax.flip = TRUE)
sst.trend = sst.ts %>%
TTR::SMA(n = 12)
sst.trend %>%
plot()
sst.ts %>%
ts.intersect(sst.trend) %>%
plot(las = 1, yax.flip = TRUE)
sst.ts.decomposed = sst.ts %>%
decompose()
sst.ts.decomposed %>%
plot(yax.flip = TRUE)
sst.ts.decomposed = sst.ts %>%
decompose()
sst.ts.season.adjusted = sst.ts - sst.ts.decomposed$seasonal
sst.ts.season.adjusted %>%
plot(las = 1, ylab = expression(SST~(degree*C)))
sst.ts %>%  tsibble::as_tsibble() %>%  rename(sst = value, Month = index) %>%
model(
ets = ETS(box_cox(sst, 0.3)),
arima = ARIMA(log(sst)),
snaive = SNAIVE(sst)
) %>%
forecast(h = "4 years") %>%
autoplot()
sst.ts %>%  tsibble::as_tsibble() %>%  rename(sst = value, Month = index) %>%
model(
ets = ETS(box_cox(sst, 0.3)),
arima = ARIMA(log(sst)),
snaive = SNAIVE(sst)
) %>%
forecast::forecast(h = "4 years") %>%
autoplot()
require(forecast)
sst.ts %>%  tsibble::as_tsibble() %>%
rename(sst = value, Month = index) %>%
model(
ets = ETS(box_cox(sst, 0.3)),
arima = ARIMA(log(sst)),
snaive = SNAIVE(sst)
) %>%
forecast::forecast(h = "4 years") %>%
autoplot()
library(fable)
library(tsibble)
library(tsibbledata)
library(lubridate)
library(dplyr)
aus_retail %>%
filter(
State %in% c("New South Wales", "Victoria"),
Industry == "Department stores"
) %>%
model(
ets = ETS(box_cox(Turnover, 0.3)),
arima = ARIMA(log(Turnover)),
snaive = SNAIVE(Turnover)
) %>%
forecast(h = "2 years") %>%
autoplot(filter(aus_retail, year(Month) > 2010), level = NULL)
pemba.daily.sst = wior::get_sstMUR(
lon.min = 39.3,
lon.max = 39.5,
lat.min = -5.0,
lat.max = -5.2,
t1 = "2015-08-01",
t2 = "2019-12-31")
pemba.daily.sst = read_csv("data/pemba_daily_sst.csv")
pemba.sst = pemba.daily.sst %>%
group_by(time) %>%
summarise(sst = median(analysed_sst, na.rm = TRUE))
pemba.sst %>% FSA::headtail()
require(heatwaveR)
ts.clim = pemba.sst %>%
rename(t = time, temp = sst) %>%
heatwaveR::ts2clm(climatologyPeriod = c("2015-08-01", "2019-12-31"))
pemba.mhw = ts.clim %>%
heatwaveR::detect_event()
pemba.mhw %>%
event_line(metric = "intensity_mean",
spread = 60,
start_date = "2019-01-01",
end_date = "2019-03-31")+
scale_y_continuous(breaks = seq(27,31,.5)) +
theme(legend.position = c(.025,.85))
pemba.sst.ts =  pemba.sst %$%
ts(data = sst, start = c(2015,8), frequency = 365.25)
pemba.sst.decompose = pemba.sst.ts %>%
decompose()
pemba.sst.decompose %>%
plot(yax.flip = TRUE, las = 1)
seasonal.adjusted = pemba.sst.ts -pemba.sst.decompose$seasonal
seasonal.adjusted %>%
plot()
pemba.splits = pemba.daily.sst %>%
filter(time > "2016-08-01") %>%
mutate(miezi = lubridate::month(time), mwaka = lubridate::year(time)) %>%
group_by(miezi, mwaka) %>%
summarise(sst = median(analysed_sst, na.rm = TRUE)) %>%
ungroup
pemba.splits %$%
EnvStats::kendallTrendTest(sst ~ mwaka) %>%
broom::tidy()%>%
slice(1)
pemba.splits %>%
mutate(season = if_else(miezi %in% c(10:12,1:4), "NE", "SE")) %>%
filter(season == "SE")%$%
EnvStats::kendallTrendTest(sst ~ mwaka)
pemba.splits %>%
mutate(season = if_else(miezi %in% c(10:12,1:4), "NE", "SE")) %>%
filter(season == "NE")%$%
EnvStats::kendallTrendTest(sst ~ mwaka)
meteo =wior::get_meteo(coastal_codes = 2,begin_year = 2016, end_year = 2020)
chl.ts.modis %>%
tseries::adf.test() %>%
broom::tidy()
pemba.splits %>%
mutate(season = if_else(miezi %in% c(10:12,1:4), "NE", "SE")) %>%
filter(season == "NE")%$%
EnvStats::kendallTrendTest(sst ~ mwaka)
chl.series %>% FSA::headtail()
sst.series
sst.series
sst.df.wide = sst.series %>%
ungroup() %>%
# rowid_to_column()
pivot_wider(names_from = site, values_from = sst)
chl.df.wide = chl.series %>%
ungroup() %>%
# rowid_to_column()
pivot_wider(names_from = site, values_from = chl)
sst.wide.ts = sst.df.wide %>%
select(2:6) %>%
as.matrix() %>%
ts(start = c(2003,1), frequency = 12)
sst.wide.ts %>%
plot()
sst.ts %>%  tsibble::as_tsibble() %>%
rename(sst = value, Month = index) %>%
model(
ets = ETS(box_cox(sst, 0.3)),
arima = ARIMA(log(sst)),
snaive = SNAIVE(sst)
) %>%
forecast::forecast(h = "4 years") %>%
autoplot()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
